stages:
  - test
  - build
  - deploy

.setup-python:
  before_script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - python --version ; pip --version  # For debugging
    - pip install -r requirements.txt

.test:
  coverage: /Test coverage (\d+\.\d+%)/
  script:
    - pip install nose
    - nosetests test/main.py

.build:
  script:
    - pip install build
    - python -m build

.deploy:
  after_script:
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

test-develop:
  image: ${PYTHON}
  stage: test
  except:
    - main
  extends:
    - .setup-python
    - .test
  parallel:
    matrix:
      - PYTHON: 
        - python:3.7
        - python:3.8
        - python:3.9
  
build-develop:
  image: ${PYTHON}
  stage: build
  except:
    - main
  extends:
    - .setup-python
    - .build
  parallel:
    matrix:
      - PYTHON: 
        - python:3.7
        - python:3.8
        - python:3.9

test-production:
  image: ${PYTHON}
  stage: test
  only:
    - main
  extends:
    - .setup-python
    - .test
  parallel:
    matrix:
      - PYTHON: 
        - python:3.7
        - python:3.8
        - python:3.9

deploy-production:
  image: ${PYTHON}
  stage: deploy
  only:
    - main
  extends:
    - .setup-python
    - .build
    - .deploy
  parallel:
    matrix:
      - PYTHON: 
        - python:3.7
        - python:3.8
        - python:3.9
