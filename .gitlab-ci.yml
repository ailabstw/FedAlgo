variables:
  IMAGE: $CI_REGISTRY_IMAGE:latest
  DOCKER_DRIVER: overlay

services:
  - docker:20.10-dind

stages:
  - test
  - build
  - deploy

.docker-login:
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

.build-docker:
  image: docker:20.10
  script:
    - |
      docker build -t $IMAGE --pull --file ./Dockerfile .
      docker push $IMAGE

.setup-python:
  before_script:
    - pip install poetry
    - poetry env use python
    - python --version ; pip --version; poetry --version  # For debugging
    - poetry install
    - poetry show  # For debugging

.test:
  coverage: /Test coverage (\d+\.\d+%)/
  script:
    - chmod +x ./scripts/compile_plink_hwp.sh
    - ./scripts/compile_plink_hwp.sh
    - chmod +x ./scripts/install_plink2.sh
    - ./scripts/install_plink2.sh
    - poetry install --only test
    - poetry run pytest

.build:
  script:
    - poetry install --only packaging,doc
    - poetry build
    - poetry run sphinx-build -b html docs/source public

.deploy:
  after_script:
    - poetry install --only publishing,doc
    - poetry run sphinx-build -b html docs/source public
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token poetry run twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

test-develop:
  image: ${PYTHON}
  stage: test
  except:
    - main
  extends:
    - .setup-python
    - .test
  parallel:
    matrix:
      - PYTHON:
        - python:3.8
        - python:3.9
        - python:3.10
        - python:3.11
        - python:3.12

build-develop:
  image: ${PYTHON}
  stage: build
  except:
    - main
  extends:
    - .setup-python
    - .build
  parallel:
    matrix:
      - PYTHON:
        - python:3.8
        - python:3.9
        - python:3.10
        - python:3.11
        - python:3.12

build-environment:
  stage: build
  only:
    - ci
  extends:
    - .docker-login
    - .build-docker

test-production:
  image: ${PYTHON}
  stage: test
  only:
    - main
  extends:
    - .setup-python
    - .test
  parallel:
    matrix:
      - PYTHON:
        - python:3.8
        - python:3.9
        - python:3.10
        - python:3.11
        - python:3.12

deploy-production:
  image: ${PYTHON}
  stage: deploy
  artifacts:
    paths:
    - public
  only:
    - main
  extends:
    - .setup-python
    - .build
    - .deploy
  parallel:
    matrix:
      - PYTHON:
        - python:3.8
        - python:3.9
        - python:3.10
        - python:3.11
        - python:3.12
